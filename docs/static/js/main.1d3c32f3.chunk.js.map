{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","SetInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","respo","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCTlBK,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,+DAGEI,MAAOF,GAHT,cAGZG,EAHY,gBAIGA,EAAMC,OAJT,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAEnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXvB,kBAeXM,GAfW,4CAAF,sDCEPO,EAAc,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAInC,OAFAN,QAAQC,IAAI,CAACc,KAAGC,QAAOV,QAGnB,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAMN,IACvB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EACXhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAmBrC,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAGGqB,EDfwBK,CAAa1B,GAAhCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAMpB,OACI,qCACI,mCAAMpB,EAAN,OAECoB,GAAW,wCAEX,qBAAKJ,UAAU,YAAf,SAEWH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADEA,EAAIC,aEjB7BgB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,gBAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAU9B,OACI,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAES6C,EAAWnB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAYA,GADLA,YCtBnC6B,IAASC,OACN,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d3c32f3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, SetInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value)\r\n        SetInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories( cats => [ inputValue,...cats] );\r\n            SetInputValue('');\r\n        }\r\n\r\n        //console.log('submit hecho')\r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs= async (category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Ig3NnA5NJVDsKk0trjTSejVk3lqfc2YM`\r\n    const respo = await fetch (url);\r\n    const {data} = await respo.json();\r\n\r\n    const gifs = data.map (img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title, url}) => {\r\n    \r\n    console.log({id,title, url})\r\n\r\n    return (\r\n        <div className=\"card  animate__animated animate__bounce\">\r\n            <img src = {url} alt= {title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n  \r\n    const {data:images, loading} = useFetchGifs(category);\r\n   \r\n  \r\n\r\n    //getGifs();\r\n    \r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n\r\n            {loading && <p>Loading</p>}\r\n       \r\n            {<div className=\"card-grid\">\r\n                    {\r\n                        images.map( (img) =>(\r\n                            <GifGridItem \r\n                                key ={img.id}\r\n                                {...img}\r\n                            />\r\n                        )) \r\n                    }\r\n                </div>}\r\n        </> \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","\r\n\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Dragon Ball'])\r\n    \r\n   // const handleAdd = () => {\r\n        //hago un spread del array que ya tengo y le agrego uno. \r\n        //setCategories pisa sobre todo el estado anterior\r\n      //  setCategories( [...categories, 'Pokemon'] );\r\n    //}\r\n\r\n    return (\r\n        <>\r\n           <h2>GifExpertApp</h2>\r\n           <AddCategory setCategories={setCategories}/>\r\n           <hr></hr> \r\n\r\n           \r\n\r\n           <ol>\r\n                {\r\n                    categories.map((category) => \r\n                        <GifGrid\r\n                            key = {category} \r\n                            category = {category}\r\n                        \r\n                        />\r\n                    )\r\n                }\r\n\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from './GifExpertApp';\n\n\nReactDOM.render(\n   <GifExpertApp />,\n   document.getElementById('root')\n);\n\n\n//GifExpertApp\n// \n\n\n\n\n//reportWebVitals();\n"],"sourceRoot":""}